[2023-02-09T15:51:52.024+0000] {taskinstance.py:1083} INFO - Dependencies all met for <TaskInstance: my_third_dagV1.fo manual__2023-02-09T15:43:48.723603+00:00 [queued]>
[2023-02-09T15:51:52.037+0000] {taskinstance.py:1083} INFO - Dependencies all met for <TaskInstance: my_third_dagV1.fo manual__2023-02-09T15:43:48.723603+00:00 [queued]>
[2023-02-09T15:51:52.037+0000] {taskinstance.py:1279} INFO - 
--------------------------------------------------------------------------------
[2023-02-09T15:51:52.037+0000] {taskinstance.py:1280} INFO - Starting attempt 5 of 5
[2023-02-09T15:51:52.038+0000] {taskinstance.py:1281} INFO - 
--------------------------------------------------------------------------------
[2023-02-09T15:51:52.070+0000] {taskinstance.py:1300} INFO - Executing <Task(PythonOperator): fo> on 2023-02-09 15:43:48.723603+00:00
[2023-02-09T15:51:52.074+0000] {standard_task_runner.py:55} INFO - Started process 8256 to run task
[2023-02-09T15:51:52.077+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'my_third_dagV1', 'fo', 'manual__2023-02-09T15:43:48.723603+00:00', '--job-id', '38', '--raw', '--subdir', 'DAGS_FOLDER/dag3.py', '--cfg-path', '/tmp/tmpero38cbw']
[2023-02-09T15:51:52.078+0000] {standard_task_runner.py:83} INFO - Job 38: Subtask fo
[2023-02-09T15:51:52.175+0000] {task_command.py:388} INFO - Running <TaskInstance: my_third_dagV1.fo manual__2023-02-09T15:43:48.723603+00:00 [running]> on host 47e55e08a495
[2023-02-09T15:51:52.282+0000] {taskinstance.py:1509} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=my_third_dagV1
AIRFLOW_CTX_TASK_ID=fo
AIRFLOW_CTX_EXECUTION_DATE=2023-02-09T15:43:48.723603+00:00
AIRFLOW_CTX_TRY_NUMBER=5
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-02-09T15:43:48.723603+00:00
[2023-02-09T15:51:55.337+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.342+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.361+0000] {logging_mixin.py:137} INFO - 0.10140537322855869
[2023-02-09T15:51:55.362+0000] {logging_mixin.py:137} INFO - y = 103053.879*x-1963587.1
[2023-02-09T15:51:55.469+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.470+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.471+0000] {logging_mixin.py:137} INFO - 0.009475179328822136
[2023-02-09T15:51:55.471+0000] {logging_mixin.py:137} INFO - y = -176.983*x+4371.3
[2023-02-09T15:51:55.573+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.575+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.576+0000] {logging_mixin.py:137} INFO - 0.10570651623273508
[2023-02-09T15:51:55.576+0000] {logging_mixin.py:137} INFO - y = 12478.074*x-359155.4
[2023-02-09T15:51:55.671+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.672+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.673+0000] {logging_mixin.py:137} INFO - 0.10598232600630919
[2023-02-09T15:51:55.673+0000] {logging_mixin.py:137} INFO - y = -39778.149*x+1464341.3
[2023-02-09T15:51:55.776+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.777+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.778+0000] {logging_mixin.py:137} INFO - 0.2712506655868596
[2023-02-09T15:51:55.778+0000] {logging_mixin.py:137} INFO - y = -336.744*x+31864.6
[2023-02-09T15:51:55.872+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.873+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.874+0000] {logging_mixin.py:137} INFO - 0.1912864242488208
[2023-02-09T15:51:55.874+0000] {logging_mixin.py:137} INFO - y = -482.545*x+60545.2
[2023-02-09T15:51:55.948+0000] {warnings.py:110} WARNING - /opt/***/dags/dag3.py:102: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_binary['product_name'] = pd.Series([product_name]*df_binary.shape[0])

[2023-02-09T15:51:55.949+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  return func(*args, **kwargs)

[2023-02-09T15:51:55.950+0000] {logging_mixin.py:137} INFO - 0.12385585443664104
[2023-02-09T15:51:55.950+0000] {logging_mixin.py:137} INFO - y = 15.305*x-1048.0
[2023-02-09T15:51:55.953+0000] {logging_mixin.py:137} INFO - a = 15.3045 ± 7.3109, доверительный интервал α=5% [0.3939 ; 30.2152]
[2023-02-09T15:51:55.953+0000] {logging_mixin.py:137} INFO - b = -1048.0027 ± 600.9166, доверительный интервал α=5% [-2273.5802 ; 177.5749]
[2023-02-09T15:51:56.008+0000] {taskinstance.py:1768} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 175, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 192, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/dag3.py", line 205, in foo1
    curve = np.transpose(emperical_demand_curve(50, 100, 20))
  File "/opt/airflow/dags/dag3.py", line 203, in emperical_demand_curve
    return np.dstack((prices, list(demands)))[0]
  File "/opt/airflow/dags/dag3.py", line 202, in <lambda>
    demands = map(lambda p: emperical_mean(functools.partial(sample_actual_demand, p), sampling), prices)
  File "/opt/airflow/dags/dag3.py", line 196, in emperical_mean
    mean = mean + sampler()
  File "/opt/airflow/dags/dag3.py", line 191, in sample_actual_demand
    return np.random.gamma(k*theta, k*theta**2, 1)[0]
  File "mtrand.pyx", line 1671, in numpy.random.mtrand.RandomState.gamma
  File "_common.pyx", line 574, in numpy.random._common.cont
  File "_common.pyx", line 387, in numpy.random._common.check_constraint
ValueError: shape < 0
[2023-02-09T15:51:56.496+0000] {taskinstance.py:1323} INFO - Marking task as FAILED. dag_id=my_third_dagV1, task_id=fo, execution_date=20230209T154348, start_date=20230209T155152, end_date=20230209T155156
[2023-02-09T15:51:56.546+0000] {standard_task_runner.py:105} ERROR - Failed to execute job 38 for task fo (shape < 0; 8256)
[2023-02-09T15:51:56.577+0000] {local_task_job.py:208} INFO - Task exited with return code 1
[2023-02-09T15:51:56.596+0000] {taskinstance.py:2578} INFO - 0 downstream tasks scheduled from follow-on schedule check
